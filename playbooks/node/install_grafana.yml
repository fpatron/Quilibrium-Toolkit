- name: Setup Grafana Alloy
  hosts: "{{ target }}"
  vars:
    exporter_dir: "{{ node_path }}/exporter"

  tasks:
    - name: Update and upgrade apt packages
      include_role:
        name: roles/system/update-os
    - name: Install required packages
      become: true
      apt:
        name:           
          - python3
          - python3-pip
          - python3-virtualenv
          - gpg
          - chrony
        state: present

    - name: Setup grafana alloy sources
      become: true
      shell: |
        wget -q -O - https://apt.grafana.com/gpg.key | gpg --dearmor | sudo tee /etc/apt/keyrings/grafana.gpg > /dev/null                              
        echo "deb [signed-by=/etc/apt/keyrings/grafana.gpg] https://apt.grafana.com stable main" | sudo tee /etc/apt/sources.list.d/grafana.list
        apt update

    - name: Install grafana alloy
      become: true
      shell: sudo DEBIAN_FRONTEND=noninteractive apt-get install alloy -y

    - name: Setup agent
      become: true
      shell: |
        echo 'logging {
                level = "info"
        }

        prometheus.exporter.unix "localhost" {
            disable_collectors = [ "arp", "bonding", "btrfs", "conntrack", "drbd", "edac", "fibrechannel", "infiniband", "ipvs", "logind", "mountstats", "nfs", "ntp", "powersupplyclass", "rapl", "schedstat", "softirqs", "tapestats", "textfile", "timex", "zfs" ]
        }

        discovery.relabel "node_exporter" {
                targets = prometheus.exporter.unix.localhost.targets
                rule {
                        action       = "replace"
                        target_label = "job"
                        replacement  = "integrations/quilibrium_exporter"
                }
        }

        prometheus.scrape "default" {
            scrape_interval = "1m"
            targets    = discovery.relabel.node_exporter.output
            forward_to = [
                prometheus.remote_write.grafanacloud.receiver,
            ]
        }

        prometheus.scrape "quilibrium_exporter" {
          scrape_interval = "1m"
          job_name = "quilibrium"
          targets = [{
            __address__ = "127.0.0.1:5001",
          }]    
          forward_to = [
              prometheus.remote_write.grafanacloud.receiver,
          ]
        }

        prometheus.remote_write "grafanacloud" {
          endpoint {
            url = "{{ graphana_prometheus_url }}"

            basic_auth {
              username = "{{ graphana_prometheus_username }}"
              password = "{{ graphana_prometheus_password }}"
            }
          }
        }

        loki.relabel "journal" {
          forward_to = []
          rule {
            source_labels = ["__journal__systemd_unit"]
            target_label  = "unit"
          }
          rule {
            source_labels = ["__journal__hostname"]
            target_label  = "hostname"
          }
        }

        loki.source.journal "read" {
            forward_to = [loki.write.grafanacloud.receiver]
            relabel_rules = loki.relabel.journal.rules
            matches = "_SYSTEMD_UNIT=quilibrium.service _SYSTEMD_UNIT=quilibrium_watchdog.service"
        }

        loki.write "grafanacloud" {
          endpoint {
            url = "{{ graphana_loki_url }}"

            basic_auth {
              username = "{{ graphana_loki_username }}"
              password = "{{ graphana_loki_password }}"
            }
          }
        }' > /etc/alloy/config.alloy

    - name: Create exporter directory
      file:
        path: "{{ exporter_dir }}"
        state: directory

    - name: Remove previous script
      file:
        path: "{{ exporter_dir }}/quilibrium_exporter.py"
        state: absent

    - name: Remove previous requirements
      file:
        path: "{{ exporter_dir }}/requirements.txt"
        state: absent

    - name: Download quilibrium_exporter.py
      get_url:
        url: https://raw.githubusercontent.com/fpatron/Quilibrium-Dashboard/master/grafana/exporter/quilibrium_exporter.py
        dest: "{{ exporter_dir }}/quilibrium_exporter.py"

    - name: Download requirements.txt
      get_url:
        url: https://raw.githubusercontent.com/fpatron/Quilibrium-Dashboard/master/grafana/exporter/requirements.txt
        dest: "{{ exporter_dir }}/requirements.txt"

    - name: Create python virtual env and install modules
      pip:
        requirements: "{{ exporter_dir }}/requirements.txt"
        virtualenv: "{{ exporter_dir }}/myenv"
        virtualenv_command: virtualenv

    - name: Install node exporter service
      become: true
      shell: |
        echo '[Unit]
        Description=Quilibrium node exporter service
        After=network.target
        [Service]
        Type=simple
        RestartSec=10s
        WorkingDirectory={{ exporter_dir }}
        ExecStart={{ exporter_dir }}/myenv/bin/python3 quilibrium_exporter.py
        User={{ ansible_user }}
        [Install]
        WantedBy=multi-user.target' > /lib/systemd/system/quilibrium_exporter.service

    - name: Enable node exporter service
      become: true
      shell: |
        systemctl daemon-reload
        systemctl enable quilibrium_exporter.service
        systemctl restart quilibrium_exporter.service
    
    - name: Restart grafana alloy
      become: true
      shell: |
        sudo systemctl enable alloy
        sudo systemctl restart alloy